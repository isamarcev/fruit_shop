version: '3.7'

services:
  web:
    build:
      context: ./
      dockerfile: Dockerfile
    command: make startup
    volumes:
      - static_volume:sudo ln -s /mnt/volume_fra1_01 /var/lib/static
#      - static_volume:/home/app/web/static
#      - media_volume:/home/app/web/media
      - media_volume:sudo ln -s /mnt/volume_fra1_01 /var/lib/media
#        /home/app/web/media
    expose:
      - 8000
    container_name: fruit_shop
    env_file:
      - ./.env
    depends_on:
      - db
      - daphne
  daphne:
    build:
      context: ./
    image: daphne:test
    ports:
      - "8080:8080"
      - "8000:8000"
#    depends_on:
#      - postgres
#    tty: true
    container_name: daphne_server
  nginx:
    build: ./nginx
    ports:
      - 80:80
    depends_on:
      - web
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
  db:
    image: postgres:14.5-alpine
    volumes:
      - postgres_data:sudo ln -s /mnt/volume_fra1_01 /var/lib/postgresql/data
#        /var/lib/postgresql/data
#      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env.db
  redis:
    image: redis:alpine
    ports:
      - '6379:6379'
    volumes:
      - cache:/data
    restart: always
  celery:
    restart: always
    build:
      context: .
    command: celery -A config worker -Q warehouse,celery
    depends_on:
      - db
      - redis
      - web
  celery-beat:
    restart: always
    build:
      context: .
    command: celery -A config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - ./.env
    depends_on:
      - celery


volumes:
  cache:
  static_volume:
  media_volume:
  postgres_data:

